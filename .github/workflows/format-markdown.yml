name: Auto-format Markdown

on:
  push:
    branches: [ main ]
    paths: [ '**/*.md' ]
  pull_request:
    branches: [ main ]
    paths: [ '**/*.md' ]

jobs:
  format:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install markdownlint
      run: npm install -g markdownlint-cli

    - name: Fix YAML frontmatter issues
      run: |
        echo "ðŸ”§ Fixing YAML frontmatter issues..."
        
        # Function to fix YAML issues
        fix_yaml() {
          local file="$1"
          echo "  Checking: $file"
          
          # Fix unquoted authors arrays
          sed -i 's/authors: \[\(@[^]]*\)\]/authors: ["\1"]/g' "$file"
          
          # Fix multiple authors in array
          sed -i 's/authors: \[\(@[^,]*\), \(@[^]]*\)\]/authors: ["\1", "\2"]/g' "$file"
          
          # Fix unquoted titles with special characters
          sed -i 's/^title: \([^"'\'']*[:\[\]|][^"'\'']*\)$/title: "\1"/g' "$file"
          
          # Fix unquoted timeline with special characters  
          sed -i 's/^timeline: \([^"'\'']*[:\[\]|][^"'\'']*\)$/timeline: "\1"/g' "$file"
          
          # Ensure tags field exists
          if ! grep -q "^tags:" "$file" && grep -q "^---$" "$file"; then
            sed -i '/^priority:/a tags: []' "$file"
          fi
        }
        
        # Fix all research files
        find . -name "*.md" -path "./initiatives/*" -o -path "./templates/*" | while read file; do
          if grep -q "^---$" "$file"; then
            fix_yaml "$file"
          fi
        done

    - name: Format markdown files
      run: |
        echo "ðŸ”§ Formatting markdown files..."
        find . -name "*.md" -exec markdownlint --fix {} + || true

    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      uses: swinton/commit@v2.x
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: "**/*.md .markdownlint.yaml"
        commit-message: "ðŸ¤– Auto-format markdown files\n\n- Fixed YAML frontmatter syntax\n- Applied consistent markdown formatting\n- Ensured proper code style\n\n[skip ci]"
        ref: ${{ github.head_ref || github.ref }}